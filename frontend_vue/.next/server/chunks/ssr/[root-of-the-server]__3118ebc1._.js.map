{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/sidebar/sidebar.tsx"],"sourcesContent":["import { SidebarItem } from \"@/lib/types\";\nimport { Button } from \"@/components/ui/button\";\n\ntype SidebarProps = {\n  items: SidebarItem[];\n  active: string;\n  setItemActive: (id: string) => void;\n};\n\nexport default function Sidebar({ items, active, setItemActive }: SidebarProps) {\n  return(\n    <div className=\"w-16 border-r border-slate-200 flex flex-col items-center py-4 space-y-2\">\n      {items.map((item) => (\n        <Button\n          key={item.id}\n          variant=\"ghost\"\n          size=\"sm\"\n          className={`w-12 h-12 p-0 transition-all duration-200 ${\n            active === item.id\n              ? \"bg-allox-teal text-white hover:bg-allox-dark-teal shadow-md\"\n              : \"text-allox-dark-gray hover:bg-allox-teal/10 hover:text-allox-teal\"\n          }`}\n          onClick={() => setItemActive(item.id)}\n          title={item.tooltip}\n        >\n          <item.icon className=\"w-5 h-5\" />\n        </Button>\n      ))}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;;;AAQe,SAAS,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAgB;IAC5E,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,2HAAA,CAAA,SAAM;gBAEL,SAAQ;gBACR,MAAK;gBACL,WAAW,CAAC,0CAA0C,EACpD,WAAW,KAAK,EAAE,GACd,gEACA,qEACJ;gBACF,SAAS,IAAM,cAAc,KAAK,EAAE;gBACpC,OAAO,KAAK,OAAO;0BAEnB,cAAA,8OAAC,KAAK,IAAI;oBAAC,WAAU;;;;;;eAXhB,KAAK,EAAE;;;;;;;;;;AAgBtB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/right-panel.tsx"],"sourcesContent":["import { Label } from \"@radix-ui/react-label\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@radix-ui/react-tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Edit3, Plus, Send, Trash2 } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Node } from \"@xyflow/react\";\n\ntype RightPanelProps = {\n  selectedNode: Node | null;\n}\n\nexport default function RightPanel({ selectedNode }: RightPanelProps) {\n  const [chatMessages, setChatMessages] = useState([\n    { type: \"bot\", message: \"¡Hola! Soy tu asistente virtual. ¿En qué puedo ayudarte?\" },\n  ])\n  const [inputMessage, setInputMessage] = useState(\"\")\n  const sendMessage = () => {\n    if (inputMessage.trim()) {\n      setChatMessages([\n        ...chatMessages,\n        { type: \"user\", message: inputMessage },\n        { type: \"bot\", message: \"Gracias por tu mensaje. Esta es una respuesta de prueba del bot.\" },\n      ])\n      setInputMessage(\"\")\n    }\n  }\n\n  return (\n    <div className=\"w-96 bg-white border-l border-slate-200 flex flex-col shadow-lg\">\n      <Tabs defaultValue=\"properties\" className=\"flex-1 flex flex-col\">\n        <div className=\"p-4 border-b border-slate-200\">\n          <TabsList className=\"grid w-full grid-cols-2 bg-gray-100\">\n            <TabsTrigger\n              value=\"properties\"\n              className=\"data-[state=active]:bg-allox-teal data-[state=active]:text-white font-medium\"\n            >\n              Propiedades\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"emulator\"\n              className=\"data-[state=active]:bg-allox-teal data-[state=active]:text-white font-medium\"\n            >\n              Emulador\n            </TabsTrigger>\n          </TabsList>\n        </div>\n\n        <TabsContent value=\"properties\" className=\"flex-1 p-6 space-y-6\">\n          <div>\n            <h3 className=\"text-xl font-bold text-allox-dark-gray mb-2\">\n              {selectedNode?.id === \"start\" ? \"Configuración de Inicio\" : \"Configuración de Fin\"}\n            </h3>\n            <p className=\"text-sm text-gray-600 mb-6\">\n              {selectedNode?.id === \"start\"\n                ? \"Configura cómo iniciará la conversación con tus usuarios\"\n                : \"Define cómo terminará la conversación con tus usuarios\"}\n            </p>\n          </div>\n\n          <div className=\"space-y-6\">\n            <div>\n              <Label htmlFor=\"node-name\" className=\"text-sm font-semibold text-allox-dark-gray mb-2 block\">\n                Nombre del Nodo\n              </Label>\n              <Input\n                id=\"node-name\"\n                className=\"border-gray-200 focus:border-allox-teal focus:ring-allox-teal/20 font-medium\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"message\" className=\"text-sm font-semibold text-allox-dark-gray mb-2 block\">\n                Mensaje\n              </Label>\n              <textarea\n                id=\"message\"\n                className=\"w-full p-4 border border-gray-200 rounded-lg resize-none h-28 text-sm focus:border-allox-teal focus:ring-2 focus:ring-allox-teal/20 focus:outline-none font-medium\"\n              />\n            </div>\n\n            {selectedNode?.id === \"start\" && (\n              <div>\n                <Label className=\"text-sm font-semibold text-allox-dark-gray mb-3 block\">Opciones Rápidas</Label>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between p-4 bg-allox-teal/5 rounded-lg border border-allox-teal/20 hover:border-allox-teal/40 transition-colors\">\n                    <span className=\"text-sm font-medium text-allox-dark-gray\">Información de productos</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-allox-teal hover:bg-allox-teal hover:text-white\"\n                      >\n                        <Edit3 className=\"w-4 h-4\" />\n                      </Button>\n                      <Button variant=\"ghost\" size=\"sm\" className=\"text-red-500 hover:bg-red-50 hover:text-red-600\">\n                        <Trash2 className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between p-4 bg-allox-teal/5 rounded-lg border border-allox-teal/20 hover:border-allox-teal/40 transition-colors\">\n                    <span className=\"text-sm font-medium text-allox-dark-gray\">Soporte técnico</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-allox-teal hover:bg-allox-teal hover:text-white\"\n                      >\n                        <Edit3 className=\"w-4 h-4\" />\n                      </Button>\n                      <Button variant=\"ghost\" size=\"sm\" className=\"text-red-500 hover:bg-red-50 hover:text-red-600\">\n                        <Trash2 className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"w-full bg-transparent border-allox-lime text-allox-dark-gray hover:bg-allox-lime hover:text-allox-dark-gray font-medium\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Agregar Opción\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"emulator\" className=\"flex-1 flex flex-col\">\n          <div className=\"p-4 border-b border-slate-200 bg-gradient-to-r from-allox-teal/5 to-allox-lime/5\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-3 h-3 bg-allox-lime rounded-full animate-pulse shadow-sm\"></div>\n                <div>\n                  <span className=\"text-sm font-semibold text-allox-dark-gray\">Emulador Activo</span>\n                  <p className=\"text-xs text-gray-600\">Prueba tu bot en tiempo real</p>\n                </div>\n              </div>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-allox-teal hover:bg-allox-teal hover:text-white\">\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n\n          <ScrollArea className=\"flex-1 p-4\">\n            <div className=\"space-y-4\">\n              {chatMessages.map((msg, index) => (\n                <div key={index} className={`flex ${msg.type === \"user\" ? \"justify-end\" : \"justify-start\"}`}>\n                  <div\n                    className={`max-w-xs p-4 rounded-2xl text-sm font-medium shadow-sm ${\n                      msg.type === \"user\"\n                        ? \"bg-allox-teal text-white rounded-br-md\"\n                        : \"bg-gray-100 text-allox-dark-gray border border-gray-200 rounded-bl-md\"\n                    }`}\n                  >\n                    {msg.message}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </ScrollArea>\n\n          <div className=\"p-4 border-t border-slate-200 bg-gray-50\">\n            <div className=\"flex space-x-3\">\n              <Input\n                placeholder=\"Escribe un mensaje de prueba...\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n                className=\"flex-1 border-gray-200 focus:border-allox-teal focus:ring-allox-teal/20 font-medium\"\n              />\n              <Button\n                size=\"sm\"\n                onClick={sendMessage}\n                className=\"bg-allox-teal hover:bg-allox-dark-teal text-white px-4 shadow-md\"\n              >\n                <Send className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/canvas-toolbar.tsx"],"sourcesContent":["import { GitBranch, Play, Plus } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ntype CanvasToolbarProps = {\n  onAddNode: () => void;\n}\n\nexport default function CanvasToolbar({ onAddNode }: CanvasToolbarProps) {\n  return (\n    <div className=\"bg-white border-b border-slate-200 px-6 py-4 flex items-center justify-between\">\n      <div className=\"flex items-center space-x-4\">\n        <Badge variant=\"secondary\" className=\"bg-allox-teal/10 text-allox-teal border-allox-teal/20 font-medium\">\n          <GitBranch className=\"w-3 h-3 mr-2\" />\n          Flujo Principal\n        </Badge>\n        <div className=\"flex items-center space-x-3\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-lime text-allox-dark-gray hover:bg-allox-lime hover:text-allox-dark-gray bg-transparent font-medium\"\n            onClick={onAddNode}\n          >\n            <Plus className=\"w-4 h-4 mr-2\" />\n            Agregar Nodo\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-teal text-allox-teal hover:bg-allox-teal hover:text-white bg-transparent font-medium\"\n          >\n            <Play className=\"w-4 h-4 mr-2\" />\n            Probar Flujo\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAMe,SAAS,cAAc,EAAE,SAAS,EAAsB;IACrE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,0HAAA,CAAA,QAAK;oBAAC,SAAQ;oBAAY,WAAU;;sCACnC,8OAAC,gNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;8BAGxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;4BACV,SAAS;;8CAET,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGnC,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAO7C","debugId":null}},
    {"offset": {"line": 884, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/header.tsx"],"sourcesContent":["import { Separator } from \"@radix-ui/react-separator\";\nimport { Bot, ChevronRight, Download, Eye, Home, Save } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback } from \"@radix-ui/react-avatar\";\n\ntype HeaderProps = {\n  onSaveWorkspace: () => void;\n}\n\nexport default function Header({ onSaveWorkspace }: HeaderProps) {\n  return (\n    <header className=\"bg-white border-b border-slate-200 px-6 py-4 shadow-sm\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-allox-teal to-[#1FBEBA] rounded-xl flex items-center justify-center shadow-md\">\n              <Bot className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-allox-dark-gray\">BOTVERSE</h1>\n              <p className=\"text-xs text-gray-500 font-medium\">Bot Editor</p>\n            </div>\n          </div>\n          <Separator orientation=\"vertical\" className=\"h-8\" />\n          <div className=\"flex items-center text-sm text-gray-500\">\n            <Home className=\"w-4 h-4 mr-2\" />\n            <span>Cliente Workspace</span>\n            <ChevronRight className=\"w-4 h-4 mx-2\" />\n            <span className=\"text-allox-dark-gray font-semibold\">Mi Bot de Atención</span>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-teal text-allox-teal hover:bg-allox-teal hover:text-white bg-transparent font-medium\"\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            Vista Previa\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-dark-gray text-allox-dark-gray hover:bg-allox-dark-gray hover:text-white bg-transparent font-medium\"\n          >\n            <Download className=\"w-4 h-4 mr-2\" />\n            Exportar\n          </Button>\n          <Button onClick={onSaveWorkspace} size=\"sm\" className=\"bg-allox-lime hover:bg-[#B5EC5D] text-allox-dark-gray font-semibold shadow-md\">\n            <Save className=\"w-4 h-4 mr-2\" />\n            Guardar\n          </Button>\n          <Avatar className=\"w-9 h-9 border-2 border-allox-teal/20\">\n            <AvatarFallback className=\"bg-allox-teal text-white font-semibold\">UB</AvatarFallback>\n          </Avatar>\n        </div>\n      </div>\n    </header>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAMe,SAAS,OAAO,EAAE,eAAe,EAAe;IAC7D,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,gMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;8CAEjB,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAyC;;;;;;sDACvD,8OAAC;4CAAE,WAAU;sDAAoC;;;;;;;;;;;;;;;;;;sCAGrD,8OAAC,qKAAA,CAAA,YAAS;4BAAC,aAAY;4BAAW,WAAU;;;;;;sCAC5C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,mMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;8CAChB,8OAAC;8CAAK;;;;;;8CACN,8OAAC,sNAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;8CACxB,8OAAC;oCAAK,WAAU;8CAAqC;;;;;;;;;;;;;;;;;;8BAGzD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,gMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGlC,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGvC,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAS;4BAAiB,MAAK;4BAAK,WAAU;;8CACpD,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGnC,8OAAC,kKAAA,CAAA,SAAM;4BAAC,WAAU;sCAChB,cAAA,8OAAC,kKAAA,CAAA,iBAAc;gCAAC,WAAU;0CAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM/E","debugId":null}},
    {"offset": {"line": 1109, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/debug-panel.tsx"],"sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@radix-ui/react-tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { HelpCircle, Trash2 } from \"lucide-react\";\nimport { ScrollArea } from \"@radix-ui/react-scroll-area\";\nimport { Flow } from \"@/lib/api\";\n\ntype DebugPanelProps = {\n  currentFlow: Flow | null\n}\n\nexport default function DebugPanel({ currentFlow }: DebugPanelProps) {\n  return (\n    <div className=\"bg-white border-t border-slate-200 shadow-lg\">\n      <Tabs defaultValue=\"logs\" className=\"h-full\">\n        <div className=\"flex items-center justify-between px-6 py-3 border-b border-slate-200 bg-gradient-to-r from-gray-50 to-white\">\n          <TabsList className=\"h-9 bg-white shadow-sm\">\n            <TabsTrigger\n              value=\"logs\"\n              className=\"text-xs font-medium data-[state=active]:bg-allox-teal data-[state=active]:text-white\"\n            >\n              Registros\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"events\"\n              className=\"text-xs font-medium data-[state=active]:bg-allox-teal data-[state=active]:text-white\"\n            >\n              Eventos\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"json\"\n              className=\"text-xs font-medium data-[state=active]:bg-allox-teal data-[state=active]:text-white\"\n            >\n              JSON\n            </TabsTrigger>\n          </TabsList>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-xs text-allox-teal hover:bg-allox-teal hover:text-white font-medium\"\n          >\n            <Trash2 className=\"w-3 h-3 mr-1\" />\n            Limpiar\n          </Button>\n        </div>\n\n        <TabsContent value=\"logs\" className=\"p-4 h-full\">\n          <ScrollArea className=\"h-32\">\n            <div className=\"space-y-1 text-xs font-mono\">\n              <div className=\"text-gray-500 flex items-center space-x-2\">\n                <span className=\"text-allox-teal\">[14:32:15]</span>\n                <span>Bot iniciado correctamente</span>\n              </div>\n              <div className=\"text-allox-teal flex items-center space-x-2\">\n                <span className=\"text-allox-teal\">[14:32:16]</span>\n                <span>Nodo 'Inicio' ejecutado</span>\n              </div>\n              <div className=\"text-gray-500 flex items-center space-x-2\">\n                <span className=\"text-allox-teal\">[14:32:17]</span>\n                <span>Esperando interacción del usuario</span>\n              </div>\n            </div>\n          </ScrollArea>\n        </TabsContent>\n\n        <TabsContent value=\"events\" className=\"p-4\">\n          <div className=\"text-xs text-gray-500 text-center py-8\">\n            <HelpCircle className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n            No hay eventos recientes\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"json\" className=\"p-4\">\n          <ScrollArea className=\"h-32\">\n            <pre className=\"text-xs text-allox-dark-gray bg-gray-50 p-3 rounded-lg\">\n              { JSON.stringify(currentFlow) }\n            </pre>\n          </ScrollArea>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AACA;;;;;;AAOe,SAAS,WAAW,EAAE,WAAW,EAAmB;IACjE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,gKAAA,CAAA,OAAI;YAAC,cAAa;YAAO,WAAU;;8BAClC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gKAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,gKAAA,CAAA,cAAW;oCACV,OAAM;oCACN,WAAU;8CACX;;;;;;8CAGD,8OAAC,gKAAA,CAAA,cAAW;oCACV,OAAM;oCACN,WAAU;8CACX;;;;;;8CAGD,8OAAC,gKAAA,CAAA,cAAW;oCACV,OAAM;oCACN,WAAU;8CACX;;;;;;;;;;;;sCAIH,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,0MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;8BAKvC,8OAAC,gKAAA,CAAA,cAAW;oBAAC,OAAM;oBAAO,WAAU;8BAClC,cAAA,8OAAC,0KAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;sDAAK;;;;;;;;;;;;8CAER,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;sDAAK;;;;;;;;;;;;8CAER,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAMd,8OAAC,gKAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,WAAU;8BACpC,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,8NAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BAAuC;;;;;;;;;;;;8BAKjE,8OAAC,gKAAA,CAAA,cAAW;oBAAC,OAAM;oBAAO,WAAU;8BAClC,cAAA,8OAAC,0KAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,8OAAC;4BAAI,WAAU;sCACX,KAAK,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/B","debugId":null}},
    {"offset": {"line": 1356, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useCallback, useState } from \"react\"\nimport { ReactFlow, applyNodeChanges, applyEdgeChanges, addEdge, NodeChange, EdgeChange, Connection, Node, Viewport, Background, Controls, Position } from '@xyflow/react';\nimport Sidebar from \"@/components/sidebar/sidebar\"\nimport RightPanel from \"@/components/right-panel\";\nimport CanvasToolbar from \"@/components/canvas-toolbar\";\nimport Header from \"@/components/header\";\nimport DebugPanel from \"@/components/debug-panel\";\nimport '@xyflow/react/dist/style.css';\n\nconst initialNodes: Node[] = [\n  {\n    id: \"start\",\n    type: \"input\",\n    position: { x: 0, y: 0 },\n    data: { label: `Inicio` },\n    style: {\n      background: \"linear-gradient(135deg, #00c6ff, #0072ff)\",\n      color: \"#FFFFFF\"\n    },\n    sourcePosition: Position.Right,\n  },\n  {\n    id: \"end\",\n    type: \"output\",\n    position: { x: 200, y: 0 },\n    data: { label: `Fin` },\n    style: {\n      background: \"linear-gradient(135deg, #ff5f6d, #ffc371)\",\n      color: \"#FFFFFF\"\n    },\n    targetPosition: Position.Left\n  }\n]\n\nexport default function BotEditor() {\n  const [selectedNode, setSelectedNode] = useState<Node | null>(null)\n  const [nodes, setNodes] = useState<Node[]>(initialNodes);\n  const [edges, setEdges] = useState([]);\n  const [viewport, setViewport] = useState<Viewport>({ x: 0, y: 0, zoom: 1 });\n\n  const onNodesChange = useCallback(\n    (changes: NodeChange<Node>[]) => setNodes((nodesSnapshot) => applyNodeChanges(changes, nodesSnapshot)),\n    [],\n  );\n  const onEdgesChange = useCallback(\n    (changes: EdgeChange<never>[]) => setEdges((edgesSnapshot) => applyEdgeChanges(changes, edgesSnapshot)),\n    [],\n  );\n  const onConnect = useCallback(\n    (params: Connection) => setEdges((edgesSnapshot) => addEdge(params, edgesSnapshot)),\n    [],\n  );\n\n  const onAddNode = () => {\n    setNodes(prev => {\n      const n = prev.length - 1;\n      return [\n        ...prev,\n        {\n          id: `node-${n}`,\n          position: { x: viewport.x, y: viewport.y },\n          data: { label: `Nodo ${n}` }\n        }\n      ];\n    });\n  }\n\n  return (\n    <div className=\"h-screen bg-gradient-to-br from-slate-50 to-slate-100 flex flex-col font-nunito\">\n      <Header onSaveWorkspace={() => {}} />\n      <div className=\"flex-1 flex overflow-hidden\">\n        <Sidebar />\n        {/* Main Canvas Area */}\n        <div className=\"flex-1 flex flex-col\">\n          <CanvasToolbar onAddNode={onAddNode} />\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            fitView\n            onViewportChange={(v) => console.log(v)}\n          >\n            <Background />\n            <Controls />\n          </ReactFlow>\n        </div>\n        <RightPanel selectedNode={selectedNode} />\n      </div>\n\n      {/* Bottom Debug Panel */}\n      <DebugPanel currentFlow={null} />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;AAWA,MAAM,eAAuB;IAC3B;QACE,IAAI;QACJ,MAAM;QACN,UAAU;YAAE,GAAG;YAAG,GAAG;QAAE;QACvB,MAAM;YAAE,OAAO,CAAC,MAAM,CAAC;QAAC;QACxB,OAAO;YACL,YAAY;YACZ,OAAO;QACT;QACA,gBAAgB,0JAAA,CAAA,WAAQ,CAAC,KAAK;IAChC;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;YAAE,GAAG;YAAK,GAAG;QAAE;QACzB,MAAM;YAAE,OAAO,CAAC,GAAG,CAAC;QAAC;QACrB,OAAO;YACL,YAAY;YACZ,OAAO;QACT;QACA,gBAAgB,0JAAA,CAAA,WAAQ,CAAC,IAAI;IAC/B;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAAE,GAAG;QAAG,GAAG;QAAG,MAAM;IAAE;IAEzE,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC9B,CAAC,UAAgC,SAAS,CAAC,gBAAkB,CAAA,GAAA,yKAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,iBACvF,EAAE;IAEJ,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC9B,CAAC,UAAiC,SAAS,CAAC,gBAAkB,CAAA,GAAA,yKAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,iBACxF,EAAE;IAEJ,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC1B,CAAC,SAAuB,SAAS,CAAC,gBAAkB,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,iBACpE,EAAE;IAGJ,MAAM,YAAY;QAChB,SAAS,CAAA;YACP,MAAM,IAAI,KAAK,MAAM,GAAG;YACxB,OAAO;mBACF;gBACH;oBACE,IAAI,CAAC,KAAK,EAAE,GAAG;oBACf,UAAU;wBAAE,GAAG,SAAS,CAAC;wBAAE,GAAG,SAAS,CAAC;oBAAC;oBACzC,MAAM;wBAAE,OAAO,CAAC,KAAK,EAAE,GAAG;oBAAC;gBAC7B;aACD;QACH;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qHAAA,CAAA,UAAM;gBAAC,iBAAiB,KAAO;;;;;;0BAChC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,iIAAA,CAAA,UAAO;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,gIAAA,CAAA,UAAa;gCAAC,WAAW;;;;;;0CAC1B,8OAAC,yKAAA,CAAA,YAAS;gCACR,OAAO;gCACP,OAAO;gCACP,eAAe;gCACf,eAAe;gCACf,WAAW;gCACX,OAAO;gCACP,kBAAkB,CAAC,IAAM,QAAQ,GAAG,CAAC;;kDAErC,8OAAC,yKAAA,CAAA,aAAU;;;;;kDACX,8OAAC,yKAAA,CAAA,WAAQ;;;;;;;;;;;;;;;;;kCAGb,8OAAC,6HAAA,CAAA,UAAU;wBAAC,cAAc;;;;;;;;;;;;0BAI5B,8OAAC,6HAAA,CAAA,UAAU;gBAAC,aAAa;;;;;;;;;;;;AAG/B","debugId":null}}]
}