{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/sidebar/sidebar.tsx"],"sourcesContent":["import { SidebarItem } from \"@/lib/types\";\nimport { Button } from \"@/components/ui/button\";\n\ntype SidebarProps = {\n  items: SidebarItem[];\n  active: string;\n  setItemActive: (id: string) => void;\n};\n\nexport default function Sidebar({ items, active, setItemActive }: SidebarProps) {\n  return(\n    <div className=\"w-16 border-r border-slate-200 flex flex-col items-center py-4 space-y-2\">\n      {items.map((item) => (\n        <Button\n          key={item.id}\n          variant=\"ghost\"\n          size=\"sm\"\n          className={`w-12 h-12 p-0 transition-all duration-200 ${\n            active === item.id\n              ? \"bg-allox-teal text-teal-500 hover:bg-allox-dark-teal shadow-md\"\n              : \"text-allox-dark-gray hover:bg-allox-teal/10 hover:text-allox-teal\"\n          }`}\n          onClick={() => setItemActive(item.id)}\n          title={item.tooltip}\n        >\n          <item.icon className=\"w-5 h-5\" />\n        </Button>\n      ))}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;;;AAQe,SAAS,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAgB;IAC5E,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,2HAAA,CAAA,SAAM;gBAEL,SAAQ;gBACR,MAAK;gBACL,WAAW,CAAC,0CAA0C,EACpD,WAAW,KAAK,EAAE,GACd,mEACA,qEACJ;gBACF,SAAS,IAAM,cAAc,KAAK,EAAE;gBACpC,OAAO,KAAK,OAAO;0BAEnB,cAAA,8OAAC,KAAK,IAAI;oBAAC,WAAU;;;;;;eAXhB,KAAK,EAAE;;;;;;;;;;AAgBtB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/right-panel.tsx"],"sourcesContent":["import { Label } from \"@radix-ui/react-label\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@radix-ui/react-tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Edit3, Plus, Send, Trash2 } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport { Node } from \"@xyflow/react\";\n\ntype RightPanelProps = {\n  selectedNode?: Node | null;\n}\n\nexport default function RightPanel({ selectedNode }: RightPanelProps) {\n  const [chatMessages, setChatMessages] = useState([\n    { type: \"bot\", message: \"¡Hola! Soy tu asistente virtual. ¿En qué puedo ayudarte?\" },\n  ])\n  const [nodeName, setNodeName] = useState(\"\")\n  const [inputMessage, setInputMessage] = useState(\"\")\n  const sendMessage = () => {\n    if (inputMessage.trim()) {\n      setChatMessages([\n        ...chatMessages,\n        { type: \"user\", message: inputMessage },\n        { type: \"bot\", message: \"Gracias por tu mensaje. Esta es una respuesta de prueba del bot.\" },\n      ])\n      setInputMessage(\"\")\n    }\n  }\n\n  useEffect(() => {\n    setNodeName(selectedNode?.data?.label as string ?? \"\");\n  }, [selectedNode]);\n\n  return (\n    <div hidden={!selectedNode} className=\"w-96 bg-white border-l border-slate-200 flex flex-col shadow-lg\">\n      <Tabs defaultValue=\"properties\" className=\"flex-1 flex flex-col\">\n        <div className=\"p-4 border-b border-slate-200\">\n          <TabsList className=\"grid w-full grid-cols-2 bg-gray-100\">\n            <TabsTrigger\n              value=\"properties\"\n              className=\"data-[state=active]:bg-allox-teal data-[state=active]:text-white font-medium\"\n            >\n              Propiedades\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"emulator\"\n              className=\"data-[state=active]:bg-allox-teal data-[state=active]:text-white font-medium\"\n            >\n              Emulador\n            </TabsTrigger>\n          </TabsList>\n        </div>\n\n        <TabsContent value=\"properties\" className=\"flex-1 p-6 space-y-6\">\n          <div>\n            <h3 className=\"text-xl font-bold text-allox-dark-gray mb-2\">\n              {selectedNode?.id === \"start\" ? \"Configuración de Inicio\" : \"Configuración de Fin\"}\n            </h3>\n            <p className=\"text-sm text-gray-600 mb-6\">\n              {selectedNode?.id === \"start\"\n                ? \"Configura cómo iniciará la conversación con tus usuarios\"\n                : \"Define cómo terminará la conversación con tus usuarios\"}\n            </p>\n          </div>\n\n          <div className=\"space-y-6\">\n            <div>\n              <Label htmlFor=\"node-name\" className=\"text-sm font-semibold text-allox-dark-gray mb-2 block\">\n                Nombre del Nodo\n              </Label>\n              <Input\n                id=\"node-name\"\n                className=\"border-gray-200 focus:border-allox-teal focus:ring-allox-teal/20 font-medium\"\n                value={nodeName}\n                onChange={(e) => setNodeName(e.target.value)}\n                disabled={[\"start\", \"end\"].includes(selectedNode?.id ?? \"\")}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"message\" className=\"text-sm font-semibold text-allox-dark-gray mb-2 block\">\n                Mensaje\n              </Label>\n              <textarea\n                id=\"message\"\n                className=\"w-full p-4 border border-gray-200 rounded-lg resize-none h-28 text-sm focus:border-allox-teal focus:ring-2 focus:ring-allox-teal/20 focus:outline-none font-medium\"\n              />\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"emulator\" className=\"flex-1 flex flex-col\">\n          <div className=\"p-4 border-b border-slate-200 bg-gradient-to-r from-allox-teal/5 to-allox-lime/5\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-3 h-3 bg-allox-lime rounded-full animate-pulse shadow-sm\"></div>\n                <div>\n                  <span className=\"text-sm font-semibold text-allox-dark-gray\">Emulador Activo</span>\n                  <p className=\"text-xs text-gray-600\">Prueba tu bot en tiempo real</p>\n                </div>\n              </div>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-allox-teal hover:bg-allox-teal hover:text-white\">\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n\n          <ScrollArea className=\"flex-1 p-4\">\n            <div className=\"space-y-4\">\n              {chatMessages.map((msg, index) => (\n                <div key={index} className={`flex ${msg.type === \"user\" ? \"justify-end\" : \"justify-start\"}`}>\n                  <div\n                    className={`max-w-xs p-4 rounded-2xl text-sm font-medium shadow-sm ${\n                      msg.type === \"user\"\n                        ? \"bg-allox-teal text-white rounded-br-md\"\n                        : \"bg-gray-100 text-allox-dark-gray border border-gray-200 rounded-bl-md\"\n                    }`}\n                  >\n                    {msg.message}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </ScrollArea>\n\n          <div className=\"p-4 border-t border-slate-200 bg-gray-50\">\n            <div className=\"flex space-x-3\">\n              <Input\n                placeholder=\"Escribe un mensaje de prueba...\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n                className=\"flex-1 border-gray-200 focus:border-allox-teal focus:ring-allox-teal/20 font-medium\"\n              />\n              <Button\n                size=\"sm\"\n                onClick={sendMessage}\n                className=\"bg-allox-teal hover:bg-allox-dark-teal text-white px-4 shadow-md\"\n              >\n                <Send className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/header.tsx"],"sourcesContent":["import { Separator } from \"@radix-ui/react-separator\";\nimport { Bot, ChevronRight, Download, Eye, Home, Save } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback } from \"@radix-ui/react-avatar\";\n\ntype HeaderProps = {\n  onSaveWorkspace: () => void;\n}\n\nexport default function Header({ onSaveWorkspace }: HeaderProps) {\n  return (\n    <header className=\"bg-white border-b border-slate-200 px-6 py-4 shadow-sm\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-allox-teal to-[#1FBEBA] rounded-xl flex items-center justify-center shadow-md\">\n              <Bot className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-allox-dark-gray\">BOTVERSE</h1>\n              <p className=\"text-xs text-gray-500 font-medium\">Bot Editor</p>\n            </div>\n          </div>\n          <Separator orientation=\"vertical\" className=\"h-8\" />\n          <div className=\"flex items-center text-sm text-gray-500\">\n            <Home className=\"w-4 h-4 mr-2\" />\n            <span>Cliente Workspace</span>\n            <ChevronRight className=\"w-4 h-4 mx-2\" />\n            <span className=\"text-allox-dark-gray font-semibold\">Mi Bot de Atención</span>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-teal text-allox-teal hover:bg-allox-teal hover:text-white bg-transparent font-medium\"\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            Vista Previa\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-dark-gray text-allox-dark-gray hover:bg-allox-dark-gray hover:text-white bg-transparent font-medium\"\n          >\n            <Download className=\"w-4 h-4 mr-2\" />\n            Exportar\n          </Button>\n          <Button onClick={onSaveWorkspace} size=\"sm\" className=\"bg-allox-lime hover:bg-[#B5EC5D] text-allox-dark-gray font-semibold shadow-md\">\n            <Save className=\"w-4 h-4 mr-2\" />\n            Guardar\n          </Button>\n          <Avatar className=\"w-9 h-9 border-2 border-allox-teal/20\">\n            <AvatarFallback className=\"bg-allox-teal text-white font-semibold\">UB</AvatarFallback>\n          </Avatar>\n        </div>\n      </div>\n    </header>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAMe,SAAS,OAAO,EAAE,eAAe,EAAe;IAC7D,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,gMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;8CAEjB,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAyC;;;;;;sDACvD,8OAAC;4CAAE,WAAU;sDAAoC;;;;;;;;;;;;;;;;;;sCAGrD,8OAAC,qKAAA,CAAA,YAAS;4BAAC,aAAY;4BAAW,WAAU;;;;;;sCAC5C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,mMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;8CAChB,8OAAC;8CAAK;;;;;;8CACN,8OAAC,sNAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;8CACxB,8OAAC;oCAAK,WAAU;8CAAqC;;;;;;;;;;;;;;;;;;8BAGzD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,gMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGlC,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGvC,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAS;4BAAiB,MAAK;4BAAK,WAAU;;8CACpD,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGnC,8OAAC,kKAAA,CAAA,SAAM;4BAAC,WAAU;sCAChB,cAAA,8OAAC,kKAAA,CAAA,iBAAc;gCAAC,WAAU;0CAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM/E","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/debug-panel.tsx"],"sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@radix-ui/react-tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { HelpCircle, Trash2 } from \"lucide-react\";\nimport { ScrollArea } from \"@radix-ui/react-scroll-area\";\nimport { Flow } from \"@/lib/api\";\n\ntype DebugPanelProps = {\n  currentFlow: Flow | null\n}\n\nexport default function DebugPanel({ currentFlow }: DebugPanelProps) {\n  return (\n    <div className=\"bg-white border-t border-slate-200 shadow-lg\">\n      <Tabs defaultValue=\"logs\" className=\"h-full\">\n        <div className=\"flex items-center justify-between px-6 py-3 border-b border-slate-200 bg-gradient-to-r from-gray-50 to-white\">\n          <TabsList className=\"h-9 bg-white shadow-sm\">\n            <TabsTrigger\n              value=\"logs\"\n              className=\"text-xs font-medium data-[state=active]:bg-allox-teal data-[state=active]:text-white\"\n            >\n              Registros\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"events\"\n              className=\"text-xs font-medium data-[state=active]:bg-allox-teal data-[state=active]:text-white\"\n            >\n              Eventos\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"json\"\n              className=\"text-xs font-medium data-[state=active]:bg-allox-teal data-[state=active]:text-white\"\n            >\n              JSON\n            </TabsTrigger>\n          </TabsList>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-xs text-allox-teal hover:bg-allox-teal hover:text-white font-medium\"\n          >\n            <Trash2 className=\"w-3 h-3 mr-1\" />\n            Limpiar\n          </Button>\n        </div>\n\n        <TabsContent value=\"logs\" className=\"p-4\">\n          <ScrollArea className=\"h-32\">\n            <div className=\"space-y-1 text-xs font-mono\">\n              <div className=\"text-gray-500 flex items-center space-x-2\">\n                <span className=\"text-allox-teal\">[14:32:15]</span>\n                <span>Bot iniciado correctamente</span>\n              </div>\n              <div className=\"text-allox-teal flex items-center space-x-2\">\n                <span className=\"text-allox-teal\">[14:32:16]</span>\n                <span>Nodo 'Inicio' ejecutado</span>\n              </div>\n              <div className=\"text-gray-500 flex items-center space-x-2\">\n                <span className=\"text-allox-teal\">[14:32:17]</span>\n                <span>Esperando interacción del usuario</span>\n              </div>\n            </div>\n          </ScrollArea>\n        </TabsContent>\n\n        <TabsContent value=\"events\" className=\"p-4\">\n          <div className=\"text-xs text-gray-500 text-center py-8\">\n            <HelpCircle className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n            No hay eventos recientes\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"json\" className=\"p-4\">\n          <ScrollArea className=\"h-32\">\n            <pre className=\"text-xs text-allox-dark-gray bg-gray-50 p-3 rounded-lg\">\n              { JSON.stringify(currentFlow) }\n            </pre>\n          </ScrollArea>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AACA;;;;;;AAOe,SAAS,WAAW,EAAE,WAAW,EAAmB;IACjE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,gKAAA,CAAA,OAAI;YAAC,cAAa;YAAO,WAAU;;8BAClC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gKAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,gKAAA,CAAA,cAAW;oCACV,OAAM;oCACN,WAAU;8CACX;;;;;;8CAGD,8OAAC,gKAAA,CAAA,cAAW;oCACV,OAAM;oCACN,WAAU;8CACX;;;;;;8CAGD,8OAAC,gKAAA,CAAA,cAAW;oCACV,OAAM;oCACN,WAAU;8CACX;;;;;;;;;;;;sCAIH,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,0MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;8BAKvC,8OAAC,gKAAA,CAAA,cAAW;oBAAC,OAAM;oBAAO,WAAU;8BAClC,cAAA,8OAAC,0KAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;sDAAK;;;;;;;;;;;;8CAER,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;sDAAK;;;;;;;;;;;;8CAER,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAMd,8OAAC,gKAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,WAAU;8BACpC,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,8NAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BAAuC;;;;;;;;;;;;8BAKjE,8OAAC,gKAAA,CAAA,cAAW;oBAAC,OAAM;oBAAO,WAAU;8BAClC,cAAA,8OAAC,0KAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,8OAAC;4BAAI,WAAU;sCACX,KAAK,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/B","debugId":null}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/sidebar/sidebar-content.tsx"],"sourcesContent":["import { ForwardRefExoticComponent, RefAttributes } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { LucideProps } from \"lucide-react\";\n\ntype SidebarContentProps = {\n  title: string;\n  description: string;\n  buttonLabel?: string;\n  buttonHandler?: () => void;\n  buttonIcon?: ForwardRefExoticComponent<Omit<LucideProps, \"ref\"> & RefAttributes<SVGSVGElement>>;\n  children: React.ReactNode;\n};\n\nexport default function SidebarContent({ title, description, buttonLabel, buttonIcon, buttonHandler, children }: SidebarContentProps) {\n  const ButtonIcon = buttonIcon ?? (() => (<span></span>));\n  const buttonHidden = !buttonLabel && !buttonHandler;\n  \n  return (\n    <div className=\"flex-1 bg-gray-50\">\n      <div className=\"p-4 space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-allox-dark-gray\">{ title }</h3>\n          <Button hidden={buttonHidden} size=\"sm\" className=\"cursor-pointer bg-allox-lime hover:bg-allox-lime text-allox-dark-gray\" onClick={buttonHandler}>\n            <ButtonIcon />\n            { buttonLabel }\n          </Button>\n        </div>\n        <p className=\"text-sm text-gray-600\">\n          { description }\n        </p>\n        { children }\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;;;AAYe,SAAS,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAuB;IAClI,MAAM,aAAa,cAAc,CAAC,kBAAO,8OAAC;;;;gBAAa;IACvD,MAAM,eAAe,CAAC,eAAe,CAAC;IAEtC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA+C;;;;;;sCAC7D,8OAAC,2HAAA,CAAA,SAAM;4BAAC,QAAQ;4BAAc,MAAK;4BAAK,WAAU;4BAAwE,SAAS;;8CACjI,8OAAC;;;;;gCACC;;;;;;;;;;;;;8BAGN,8OAAC;oBAAE,WAAU;8BACT;;;;;;gBAEF;;;;;;;;;;;;AAIV","debugId":null}},
    {"offset": {"line": 1139, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/workflow-item.tsx"],"sourcesContent":["import clsx from \"clsx\";\n\ntype WorkflowItemProps = {\n  title: string;\n  description: string;\n  isSelected: boolean;\n  onClick: () => void;\n};\n\nconst selectedClasses = \"bg-white border-allox-teal/20 hover:border-allox-teal/40\";\nconst notSelectedClasses = \"bg-gray-50 border-gray-200 hover:border-gray-300\";\n\nexport default function WorkflowItem({ title, description, isSelected, onClick }: WorkflowItemProps) {\n  return (\n    <div className={clsx(\"p-3 border rounded-lg cursor-pointer transition-colors\", isSelected ? selectedClasses : notSelectedClasses)} onClick={onClick}>\n      <div className=\"flex items-center justify-between gap-2\">\n        <div>\n          <p className=\"font-medium text-allox-dark-gray\">{ title }</p>\n          <p className=\"text-sm text-gray-600\">{ description }</p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;AASA,MAAM,kBAAkB;AACxB,MAAM,qBAAqB;AAEZ,SAAS,aAAa,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAqB;IACjG,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,0DAA0D,aAAa,kBAAkB;QAAqB,SAAS;kBAC1I,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;;kCACC,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;kCAClD,8OAAC;wBAAE,WAAU;kCAA0B;;;;;;;;;;;;;;;;;;;;;;AAKjD","debugId":null}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/workflows.tsx"],"sourcesContent":["import useQuery from \"@/hooks/use-query\";\nimport WorkflowItem from \"@/components/workflow-item\";\nimport { FullProject } from \"@/lib/api\";\n\ntype WorkflowsProps = {\n  loading: boolean;\n  hasError: boolean;\n  data: FullProject[] | null;\n  selected: FullProject | null;\n  onSelect: (workflow: FullProject) => void;\n};\n\nexport default function Workflows({ loading, hasError, data, selected, onSelect }: WorkflowsProps) {\n  const hasData = !!data?.length;\n  const isEmpty = !loading && data?.length === 0;\n\n  return (\n    <div className=\"space-y-2\">\n      {loading && !hasError && <p>Cargando flujos de trabajo...</p>}\n\n      {!loading && hasData &&\n        data!.map((workflow) => (\n          <WorkflowItem\n            key={workflow.id}\n            title={workflow.name}\n            description={workflow.description ?? \"\"}\n            isSelected={workflow.id === selected?.id}\n            onClick={() => onSelect(workflow)}\n          />\n        ))}\n\n      {!loading && !hasError && isEmpty && (\n        <p>No hay flujos de trabajo creados hasta el momento.</p>\n      )}\n\n      {isEmpty && hasError && (\n        <p>Ocurrió un error obteniendo los flujos de trabajo.</p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAWe,SAAS,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAkB;IAC/F,MAAM,UAAU,CAAC,CAAC,MAAM;IACxB,MAAM,UAAU,CAAC,WAAW,MAAM,WAAW;IAE7C,qBACE,8OAAC;QAAI,WAAU;;YACZ,WAAW,CAAC,0BAAY,8OAAC;0BAAE;;;;;;YAE3B,CAAC,WAAW,WACX,KAAM,GAAG,CAAC,CAAC,yBACT,8OAAC,+HAAA,CAAA,UAAY;oBAEX,OAAO,SAAS,IAAI;oBACpB,aAAa,SAAS,WAAW,IAAI;oBACrC,YAAY,SAAS,EAAE,KAAK,UAAU;oBACtC,SAAS,IAAM,SAAS;mBAJnB,SAAS,EAAE;;;;;YAQrB,CAAC,WAAW,CAAC,YAAY,yBACxB,8OAAC;0BAAE;;;;;;YAGJ,WAAW,0BACV,8OAAC;0BAAE;;;;;;;;;;;;AAIX","debugId":null}},
    {"offset": {"line": 1252, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1298, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/canvas-toolbar.tsx"],"sourcesContent":["import { GitBranch, Play, Plus } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ntype CanvasToolbarProps = {\n  onAddNode: () => void;\n}\n\nexport default function CanvasToolbar({ onAddNode }: CanvasToolbarProps) {\n  return (\n    <div className=\"bg-white border-b border-slate-200 px-6 py-4 flex items-center justify-between\">\n      <div className=\"flex items-center space-x-4\">\n        <Badge variant=\"secondary\" className=\"bg-allox-teal/10 text-allox-teal border-allox-teal/20 font-medium\">\n          <GitBranch className=\"w-3 h-3 mr-2\" />\n          Flujo Principal\n        </Badge>\n        <div className=\"flex items-center space-x-3\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-lime text-allox-dark-gray hover:bg-allox-lime hover:text-allox-dark-gray bg-transparent font-medium\"\n            onClick={onAddNode}\n          >\n            <Plus className=\"w-4 h-4 mr-2\" />\n            Agregar Nodo\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-allox-teal text-allox-teal hover:bg-allox-teal hover:text-white bg-transparent font-medium\"\n          >\n            <Play className=\"w-4 h-4 mr-2\" />\n            Probar Flujo\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAMe,SAAS,cAAc,EAAE,SAAS,EAAsB;IACrE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,0HAAA,CAAA,QAAK;oBAAC,SAAQ;oBAAY,WAAU;;sCACnC,8OAAC,gNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;8BAGxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;4BACV,SAAS;;8CAET,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAGnC,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;;8CAEV,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAO7C","debugId":null}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/components/canvas.tsx"],"sourcesContent":["import CanvasToolbar from \"@/components/canvas-toolbar\";\nimport { FullProject } from \"@/lib/api\";\nimport { ReactFlow, applyNodeChanges, applyEdgeChanges, addEdge, NodeChange, EdgeChange, Connection, Node, Viewport, Background, Controls } from '@xyflow/react';\nimport { SetStateAction, useCallback, useEffect, useState } from \"react\";\n\ntype CanvasProps = {\n  workflow?: FullProject | null;\n  nodes: Node[];\n  onNodeChange: (node: SetStateAction<Node[]>) => void;\n};\n\nfunction NoWorkspaceAvailable() {\n  return (\n    <div className=\"flex flex-col gap-2 items-center justify-center h-full\">\n      <h2 className=\"font-bold\">No ha seleccionado ningún flujo de trabajo</h2>\n      <p>Crea un flujo desde panel izquierdo o selecciona uno disponible</p>\n    </div>\n  );\n}\n\nexport default function Canvas({ workflow, nodes, onNodeChange }: CanvasProps) {\n  const [edges, setEdges] = useState([]);\n\n  const onNodesChange = useCallback((changes: NodeChange<Node>[]) => onNodeChange((nodesSnapshot) => applyNodeChanges(changes, nodesSnapshot)), []);\n  const onEdgesChange = useCallback((changes: EdgeChange<never>[]) => setEdges((edgesSnapshot) => applyEdgeChanges(changes, edgesSnapshot)), []);\n  const onConnect = useCallback((params: Connection) => setEdges((edgesSnapshot) => addEdge(params, edgesSnapshot)), []);\n\n  const onAddNode = () => {\n    onNodeChange(prev => {\n      const n = prev.length - 1;\n      return [\n        ...prev,\n        {\n          id: `node-${n}`,\n          position: { x: 0, y: 0 },\n          data: { label: `Nodo ${n}` }\n        }\n      ];\n    });\n  };\n\n  useEffect(() =>{\n    if (workflow) {\n      onNodeChange(workflow.flows[0].nodes.map(node => ({\n        id: node.id,\n        type: node.type,\n        data: {\n          label: node.content\n        },\n        position: { x: 0, y: 0 }\n      })));\n    }\n  }, []);\n\n  return (\n    <div className=\"flex-1 flex flex-col\">\n      { !!workflow && <CanvasToolbar onAddNode={onAddNode} /> }\n      <ReactFlow\n        hidden={!workflow}\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        fitView\n        onViewportChange={(v) => console.log(v)}\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n      { !workflow && <NoWorkspaceAvailable /> }\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;AACA;;;;;AAQA,SAAS;IACP,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAY;;;;;;0BAC1B,8OAAC;0BAAE;;;;;;;;;;;;AAGT;AAEe,SAAS,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAe;IAC3E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAErC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,UAAgC,aAAa,CAAC,gBAAkB,CAAA,GAAA,yKAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,iBAAiB,EAAE;IAChJ,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,UAAiC,SAAS,CAAC,gBAAkB,CAAA,GAAA,yKAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,iBAAiB,EAAE;IAC7I,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,SAAuB,SAAS,CAAC,gBAAkB,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,iBAAiB,EAAE;IAErH,MAAM,YAAY;QAChB,aAAa,CAAA;YACX,MAAM,IAAI,KAAK,MAAM,GAAG;YACxB,OAAO;mBACF;gBACH;oBACE,IAAI,CAAC,KAAK,EAAE,GAAG;oBACf,UAAU;wBAAE,GAAG;wBAAG,GAAG;oBAAE;oBACvB,MAAM;wBAAE,OAAO,CAAC,KAAK,EAAE,GAAG;oBAAC;gBAC7B;aACD;QACH;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU;YACZ,aAAa,SAAS,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;oBAChD,IAAI,KAAK,EAAE;oBACX,MAAM,KAAK,IAAI;oBACf,MAAM;wBACJ,OAAO,KAAK,OAAO;oBACrB;oBACA,UAAU;wBAAE,GAAG;wBAAG,GAAG;oBAAE;gBACzB,CAAC;QACH;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;YACX,CAAC,CAAC,0BAAY,8OAAC,gIAAA,CAAA,UAAa;gBAAC,WAAW;;;;;;0BAC1C,8OAAC,yKAAA,CAAA,YAAS;gBACR,QAAQ,CAAC;gBACT,OAAO;gBACP,OAAO;gBACP,eAAe;gBACf,eAAe;gBACf,WAAW;gBACX,OAAO;gBACP,kBAAkB,CAAC,IAAM,QAAQ,GAAG,CAAC;;kCAErC,8OAAC,yKAAA,CAAA,aAAU;;;;;kCACX,8OAAC,yKAAA,CAAA,WAAQ;;;;;;;;;;;YAET,CAAC,0BAAY,8OAAC;;;;;;;;;;;AAGtB","debugId":null}},
    {"offset": {"line": 1531, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/hooks/use-query.ts"],"sourcesContent":["\"use client\"\nimport { useEffect, useState, useCallback } from \"react\";\n\ntype QueryOptions = {\n  data?: unknown;\n  params?: { [x: string]: string };\n  headers?: HeadersInit;\n  skip?: boolean; // para evitar el fetch automático\n};\n\nfunction toSearchParams(params: { [x: string]: string } = {}) {\n  const urlSearch = new URLSearchParams();\n  Object.entries(params).forEach(([key, value]) => {\n    urlSearch.append(key, value);\n  });\n  return urlSearch.toString();\n}\n\nexport default function useQuery<T>(\n  url: string,\n  method: \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\",\n  options?: QueryOptions\n) {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<T | null>(null);\n  const [error, setError] = useState<unknown | null>(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      const searchParams = toSearchParams(options?.params);\n      const finalUrl = searchParams ? `${url}?${searchParams}` : url;\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options?.headers,\n        },\n      };\n\n      if ([\"POST\", \"PUT\", \"PATCH\"].includes(method) && options?.data) {\n        fetchOptions.body = JSON.stringify(options.data);\n      }\n\n      const response = await fetch(finalUrl, fetchOptions);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw result;\n      }\n\n      setData(result);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [url, method, JSON.stringify(options)]);\n\n  useEffect(() => {\n    if (!options?.skip) {\n      fetchData();\n    }\n  }, [fetchData]);\n\n  return { data, error, loading, refetch: fetchData };\n}"],"names":[],"mappings":";;;AACA;AADA;;AAUA,SAAS,eAAe,SAAkC,CAAC,CAAC;IAC1D,MAAM,YAAY,IAAI;IACtB,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;QAC1C,UAAU,MAAM,CAAC,KAAK;IACxB;IACA,OAAO,UAAU,QAAQ;AAC3B;AAEe,SAAS,SACtB,GAAW,EACX,MAAmD,EACnD,OAAsB;IAEtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IAEnD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC5B,IAAI;YACF,WAAW;YAEX,MAAM,eAAe,eAAe,SAAS;YAC7C,MAAM,WAAW,eAAe,GAAG,IAAI,CAAC,EAAE,cAAc,GAAG;YAE3D,MAAM,eAA4B;gBAChC;gBACA,SAAS;oBACP,gBAAgB;oBAChB,GAAG,SAAS,OAAO;gBACrB;YACF;YAEA,IAAI;gBAAC;gBAAQ;gBAAO;aAAQ,CAAC,QAAQ,CAAC,WAAW,SAAS,MAAM;gBAC9D,aAAa,IAAI,GAAG,KAAK,SAAS,CAAC,QAAQ,IAAI;YACjD;YAEA,MAAM,WAAW,MAAM,MAAM,UAAU;YACvC,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM;YACR;YAEA,QAAQ;QACV,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;QAAK;QAAQ,KAAK,SAAS,CAAC;KAAS;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,SAAS,MAAM;YAClB;QACF;IACF,GAAG;QAAC;KAAU;IAEd,OAAO;QAAE;QAAM;QAAO;QAAS,SAAS;IAAU;AACpD","debugId":null}},
    {"offset": {"line": 1603, "column": 0}, "map": {"version":3,"sources":["file:///Users/jpablonb/Desktop/BOTVERSE/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { JSX, useEffect, useState } from \"react\"\nimport { Node, Position } from '@xyflow/react';\nimport Sidebar from \"@/components/sidebar/sidebar\"\nimport RightPanel from \"@/components/right-panel\";\nimport Header from \"@/components/header\";\nimport DebugPanel from \"@/components/debug-panel\";\nimport SidebarContent from \"@/components/sidebar/sidebar-content\";\nimport Workflows from \"@/components/workflows\";\nimport Canvas from \"@/components/canvas\";\nimport {\n  BookOpen,\n  GitBranch,\n  GitCommit,\n  HelpCircle,\n  Plus,\n  Puzzle,\n  Search,\n  Settings,\n  Table,\n  Users,\n  Zap\n} from \"lucide-react\";\nimport '@xyflow/react/dist/style.css';\nimport useQuery from \"@/hooks/use-query\";\nimport { FullProject } from \"@/lib/api\";\n\nconst sidebarItems = [\n  {\n    id: \"workflows\",\n    icon: GitBranch,\n    label: \"Workflows\",\n    tooltip: \"Gestionar flujos de conversación\",\n    description: \"Diseña y edita los flujos de conversación de tu bot\",\n  },\n  {\n    id: \"knowledge\",\n    icon: BookOpen,\n    label: \"Bases de conocimientos\",\n    tooltip: \"Administrar base de conocimientos\",\n    description: \"Gestiona documentos, FAQ y contenido del bot\",\n  },\n  {\n    id: \"tables\",\n    icon: Table,\n    label: \"Tablas\",\n    tooltip: \"Gestionar tablas de datos\",\n    description: \"Administra datos estructurados y variables\",\n  },\n  {\n    id: \"agents\",\n    icon: Users,\n    label: \"Agentes\",\n    tooltip: \"Configurar agentes virtuales\",\n    description: \"Configura diferentes personalidades del bot\",\n  },\n  {\n    id: \"hooks\",\n    icon: Zap,\n    label: \"Hooks\",\n    tooltip: \"Configurar webhooks y eventos\",\n    description: \"Integra eventos y disparadores externos\",\n  },\n  {\n    id: \"integrations\",\n    icon: Puzzle,\n    label: \"Integraciones instaladas\",\n    tooltip: \"Ver integraciones activas\",\n    description: \"Gestiona conexiones con servicios externos\",\n  },\n  {\n    id: \"versions\",\n    icon: GitCommit,\n    label: \"Versiones\",\n    tooltip: \"Historial de versiones\",\n    description: \"Control de versiones y respaldos del bot\",\n  },\n  {\n    id: \"config\",\n    icon: Settings,\n    label: \"Configuración del Bot\",\n    tooltip: \"Configuración general\",\n    description: \"Ajustes generales y configuración avanzada\",\n  },\n  {\n    id: \"search\",\n    icon: Search,\n    label: \"Buscar\",\n    tooltip: \"Buscar en el proyecto\",\n    description: \"Busca elementos en todo el proyecto\",\n  },\n  {\n    id: \"help\",\n    icon: HelpCircle,\n    label: \"Ayuda\",\n    tooltip: \"Centro de ayuda\",\n    description: \"Documentación y soporte técnico\",\n  },\n];\n\nconst initialNodes: Node[] = [\n  {\n    id: \"start\",\n    type: \"input\",\n    position: { x: 0, y: 0 },\n    data: { label: `Inicio` },\n    style: {\n      background: \"linear-gradient(135deg, #00c6ff, #0072ff)\",\n      color: \"#FFFFFF\"\n    },\n    sourcePosition: Position.Right,\n  },\n  {\n    id: \"end\",\n    type: \"output\",\n    position: { x: 200, y: 0 },\n    data: { label: `Fin` },\n    style: {\n      background: \"linear-gradient(135deg, #ff5f6d, #ffc371)\",\n      color: \"#FFFFFF\"\n    },\n    targetPosition: Position.Left\n  }\n];\n\nexport default function BotEditor() {\n  const { data, loading, error } = useQuery<FullProject[]>(\n    \"http://127.0.0.1:8000/projects/\",\n    \"GET\"\n  );\n\n  const [activeSidebarItem, setActiveSidebarItem] = useState(\"workflows\")\n  const [nodes, setNodes] = useState<Node[]>(initialNodes);\n  const [selectedWorkflow, setSelectedWorkflow] = useState<FullProject | null>(null);\n  const activeItem = sidebarItems.find(item => item.id === activeSidebarItem);\n  const selectedNode = nodes.find(node => node.selected);\n  const [workflows, setWorkflows] = useState<FullProject[]>([]);\n\n  const onAddWorkflow = () => {\n    setWorkflows(prev => [\n      {\n        id: Date.now().toString(),\n        name: \"Borrador \" + (prev.length + 1),\n        description: \"Nuevo flujo\",\n        flows: [],\n        created_at: new Date().toString()\n      },\n      ...prev\n    ])\n  }\n\n  useEffect(() => {\n    if (data) {\n      setWorkflows(data);\n    }\n  }, [data]);\n\n  return (\n    <div className=\"h-screen bg-gradient-to-br from-slate-50 to-slate-100 flex flex-col font-nunito\">\n      <Header onSaveWorkspace={() => {}} />\n      <div className=\"flex-1 flex overflow-hidden\">\n        <div className=\"w-80 bg-white border-r border-slate-200 flex\">\n          <Sidebar items={sidebarItems} active={activeSidebarItem} setItemActive={setActiveSidebarItem}  />\n          {\n            activeItem?.id === \"workflows\" &&\n            <SidebarContent\n              title={activeItem?.label ?? \"No encontrado\"}\n              description={activeItem?.description ?? \"No se encontró la opción seleccionada.\"}\n              buttonLabel=\"Nuevo\"\n              buttonIcon={Plus}\n              buttonHandler={onAddWorkflow}\n            >\n              <Workflows onSelect={setSelectedWorkflow} loading={loading} hasError={!!error} data={workflows} selected={selectedWorkflow} />\n            </SidebarContent>\n          }\n          {\n            activeItem?.id !== \"workflows\" &&\n            <SidebarContent\n              title={activeItem?.label ?? \"No encontrado\"}\n              description={activeItem?.description ?? \"No se encontró la opción seleccionada.\"}\n            >\n              <div className=\"mt-4 p-4 bg-gray-50 rounded-lg text-center\">\n                <p className=\"text-sm text-gray-500\">Funcionalidad en desarrollo</p>\n              </div>\n            </SidebarContent>\n          }\n        </div>\n        {/* Main Canvas Area */}\n        <Canvas nodes={nodes} onNodeChange={setNodes} workflow={selectedWorkflow} />\n        <RightPanel selectedNode={selectedNode} />\n      </div>\n\n      {/* Bottom Debug Panel */}\n      <DebugPanel currentFlow={null} />\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}